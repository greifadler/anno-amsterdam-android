/*
 * Anno Amsterdam CoreAPI
 * The internal API for the Anno Amsterdam project's CMS
 *
 * The version of the OpenAPI document: v1
 * Contact: preis@computer.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nl.anno.amsterdam.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BuildingTimeline
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-07T10:50:10.458507400+01:00[Europe/Vienna]")
public class BuildingTimeline {
  public static final String SERIALIZED_NAME_YEAR = "year";
  @SerializedName(SERIALIZED_NAME_YEAR)
  private Integer year;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public BuildingTimeline() { 
  }

  public BuildingTimeline year(Integer year) {
    
    this.year = year;
    return this;
  }

   /**
   * The year when the event occurred.
   * @return year
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The year when the event occurred.")

  public Integer getYear() {
    return year;
  }


  public void setYear(Integer year) {
    this.year = year;
  }


  public BuildingTimeline description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the event.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the event.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildingTimeline buildingTimeline = (BuildingTimeline) o;
    return Objects.equals(this.year, buildingTimeline.year) &&
        Objects.equals(this.description, buildingTimeline.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(year, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildingTimeline {\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

