/*
 * Anno Amsterdam CoreAPI
 * The internal API for the Anno Amsterdam project's CMS
 *
 * The version of the OpenAPI document: v1
 * Contact: preis@computer.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nl.anno.amsterdam.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import nl.anno.amsterdam.model.BuildingImageUrls;
import nl.anno.amsterdam.model.BuildingTimeline;
import nl.anno.amsterdam.model.Location;
import org.threeten.bp.OffsetDateTime;

/**
 * Building
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-07T10:50:10.458507400+01:00[Europe/Vienna]")
public class Building {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private Location location;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_MAIN_IMAGE_URL = "main_image_url";
  @SerializedName(SERIALIZED_NAME_MAIN_IMAGE_URL)
  private String mainImageUrl;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CONSTRUCTION_YEAR = "construction_year";
  @SerializedName(SERIALIZED_NAME_CONSTRUCTION_YEAR)
  private Integer constructionYear;

  public static final String SERIALIZED_NAME_TYPE_OF_USE = "type_of_use";
  @SerializedName(SERIALIZED_NAME_TYPE_OF_USE)
  private String typeOfUse;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_IMAGE_URLS = "image_urls";
  @SerializedName(SERIALIZED_NAME_IMAGE_URLS)
  private List<BuildingImageUrls> imageUrls = null;

  public static final String SERIALIZED_NAME_TIMELINE = "timeline";
  @SerializedName(SERIALIZED_NAME_TIMELINE)
  private List<BuildingTimeline> timeline = null;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_AUDIOGUIDES = "audioguides";
  @SerializedName(SERIALIZED_NAME_AUDIOGUIDES)
  private Object audioguides;

  public Building() { 
  }

  
  public Building(
     OffsetDateTime createdAt, 
     OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public Building id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Building location(Location location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Location getLocation() {
    return location;
  }


  public void setLocation(Location location) {
    this.location = location;
  }


   /**
   * The date and time this record was created. Automatically set upon creation.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time this record was created. Automatically set upon creation.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * The date and time this record was last updated. Automatically updated on save.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time this record was last updated. Automatically updated on save.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public Building mainImageUrl(String mainImageUrl) {
    
    this.mainImageUrl = mainImageUrl;
    return this;
  }

   /**
   * URL to a preview image of the building.
   * @return mainImageUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "URL to a preview image of the building.")

  public String getMainImageUrl() {
    return mainImageUrl;
  }


  public void setMainImageUrl(String mainImageUrl) {
    this.mainImageUrl = mainImageUrl;
  }


  public Building address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * Physical address of the building.
   * @return address
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Physical address of the building.")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public Building name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Alternative name instead of the address of the building.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Alternative name instead of the address of the building.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Building constructionYear(Integer constructionYear) {
    
    this.constructionYear = constructionYear;
    return this;
  }

   /**
   * Year when the building was constructed.
   * minimum: -2147483648
   * maximum: 2147483647
   * @return constructionYear
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Year when the building was constructed.")

  public Integer getConstructionYear() {
    return constructionYear;
  }


  public void setConstructionYear(Integer constructionYear) {
    this.constructionYear = constructionYear;
  }


  public Building typeOfUse(String typeOfUse) {
    
    this.typeOfUse = typeOfUse;
    return this;
  }

   /**
   * The intended use of the building (e.g., residential, commercial).
   * @return typeOfUse
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The intended use of the building (e.g., residential, commercial).")

  public String getTypeOfUse() {
    return typeOfUse;
  }


  public void setTypeOfUse(String typeOfUse) {
    this.typeOfUse = typeOfUse;
  }


  public Building tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Building addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * JSON-formatted list of tags related to the building.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JSON-formatted list of tags related to the building.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Building description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Detailed description of the building.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Detailed description of the building.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Building imageUrls(List<BuildingImageUrls> imageUrls) {
    
    this.imageUrls = imageUrls;
    return this;
  }

  public Building addImageUrlsItem(BuildingImageUrls imageUrlsItem) {
    if (this.imageUrls == null) {
      this.imageUrls = new ArrayList<BuildingImageUrls>();
    }
    this.imageUrls.add(imageUrlsItem);
    return this;
  }

   /**
   * JSON-formatted list of objects with URLs to images of the building and their sources.
   * @return imageUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JSON-formatted list of objects with URLs to images of the building and their sources.")

  public List<BuildingImageUrls> getImageUrls() {
    return imageUrls;
  }


  public void setImageUrls(List<BuildingImageUrls> imageUrls) {
    this.imageUrls = imageUrls;
  }


  public Building timeline(List<BuildingTimeline> timeline) {
    
    this.timeline = timeline;
    return this;
  }

  public Building addTimelineItem(BuildingTimeline timelineItem) {
    if (this.timeline == null) {
      this.timeline = new ArrayList<BuildingTimeline>();
    }
    this.timeline.add(timelineItem);
    return this;
  }

   /**
   * JSON-formatted data representing key events in the building&#39;s history.
   * @return timeline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JSON-formatted data representing key events in the building's history.")

  public List<BuildingTimeline> getTimeline() {
    return timeline;
  }


  public void setTimeline(List<BuildingTimeline> timeline) {
    this.timeline = timeline;
  }


  public Building active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Indicates whether the building is active or not.
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the building is active or not.")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public Building audioguides(Object audioguides) {
    
    this.audioguides = audioguides;
    return this;
  }

   /**
   * JSON-formatted list of audioguides.
   * @return audioguides
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JSON-formatted list of audioguides.")

  public Object getAudioguides() {
    return audioguides;
  }


  public void setAudioguides(Object audioguides) {
    this.audioguides = audioguides;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Building building = (Building) o;
    return Objects.equals(this.id, building.id) &&
        Objects.equals(this.location, building.location) &&
        Objects.equals(this.createdAt, building.createdAt) &&
        Objects.equals(this.updatedAt, building.updatedAt) &&
        Objects.equals(this.mainImageUrl, building.mainImageUrl) &&
        Objects.equals(this.address, building.address) &&
        Objects.equals(this.name, building.name) &&
        Objects.equals(this.constructionYear, building.constructionYear) &&
        Objects.equals(this.typeOfUse, building.typeOfUse) &&
        Objects.equals(this.tags, building.tags) &&
        Objects.equals(this.description, building.description) &&
        Objects.equals(this.imageUrls, building.imageUrls) &&
        Objects.equals(this.timeline, building.timeline) &&
        Objects.equals(this.active, building.active) &&
        Objects.equals(this.audioguides, building.audioguides);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, location, createdAt, updatedAt, mainImageUrl, address, name, constructionYear, typeOfUse, tags, description, imageUrls, timeline, active, audioguides);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Building {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    mainImageUrl: ").append(toIndentedString(mainImageUrl)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    constructionYear: ").append(toIndentedString(constructionYear)).append("\n");
    sb.append("    typeOfUse: ").append(toIndentedString(typeOfUse)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    imageUrls: ").append(toIndentedString(imageUrls)).append("\n");
    sb.append("    timeline: ").append(toIndentedString(timeline)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    audioguides: ").append(toIndentedString(audioguides)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

